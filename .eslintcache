[{"D:\\todo-list\\src\\reportWebVitals.ts":"1","D:\\todo-list\\src\\App.tsx":"2","D:\\todo-list\\src\\helpers\\index.ts":"3","D:\\todo-list\\src\\index.tsx":"4","D:\\todo-list\\src\\containers\\HomePage\\HomePage.tsx":"5","D:\\todo-list\\src\\hooks\\useEventCallback.ts":"6","D:\\todo-list\\src\\components\\UI\\Modal\\Modal.tsx":"7","D:\\todo-list\\src\\components\\TodoForm\\TodoForm.tsx":"8","D:\\todo-list\\src\\components\\UI\\Modal\\index.ts":"9","D:\\todo-list\\src\\components\\UI\\Overlay\\index.ts":"10","D:\\todo-list\\src\\components\\UI\\Overlay\\Overlay.tsx":"11","D:\\todo-list\\src\\components\\TodoForm\\index.ts":"12","D:\\todo-list\\src\\components\\TodoItem\\TodoItem.tsx":"13","D:\\todo-list\\src\\components\\TodoItem\\index.ts":"14","D:\\todo-list\\src\\components\\ActionBox\\ActionBox.tsx":"15"},{"size":425,"mtime":1607425120049,"results":"16","hashOfConfig":"17"},{"size":536,"mtime":1610761861396,"results":"18","hashOfConfig":"17"},{"size":708,"mtime":1610769979073,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":1607425120049,"results":"20","hashOfConfig":"17"},{"size":7673,"mtime":1610906405390,"results":"21","hashOfConfig":"17"},{"size":474,"mtime":1610716723573,"results":"22","hashOfConfig":"17"},{"size":975,"mtime":1610717894458,"results":"23","hashOfConfig":"17"},{"size":3476,"mtime":1610902366890,"results":"24","hashOfConfig":"17"},{"size":36,"mtime":1610717368132,"results":"25","hashOfConfig":"17"},{"size":38,"mtime":1610717363962,"results":"26","hashOfConfig":"17"},{"size":1687,"mtime":1610717498131,"results":"27","hashOfConfig":"17"},{"size":39,"mtime":1610717521446,"results":"28","hashOfConfig":"17"},{"size":1677,"mtime":1610904881109,"results":"29","hashOfConfig":"17"},{"size":39,"mtime":1610732387866,"results":"30","hashOfConfig":"17"},{"size":801,"mtime":1610900222758,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9dmz49",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\todo-list\\src\\reportWebVitals.ts",[],"D:\\todo-list\\src\\App.tsx",[],"D:\\todo-list\\src\\helpers\\index.ts",[],["65","66"],"D:\\todo-list\\src\\index.tsx",[],"D:\\todo-list\\src\\containers\\HomePage\\HomePage.tsx",[],"D:\\todo-list\\src\\hooks\\useEventCallback.ts",["67"],"import { useRef, useEffect, useCallback } from 'react';\r\nimport { CallBack } from '../type';\r\n\r\nexport const useEventCallback = <T extends (...args: any[]) => unknown>(\r\n  fn: T,\r\n  deps: ReadonlyArray<unknown>,\r\n): CallBack => {\r\n  const ref = useRef<T>(fn);\r\n\r\n  useEffect(() => {\r\n    ref.current = fn;\r\n  }, [fn, ...deps]);\r\n\r\n  return useCallback(\r\n    (...args: any[]) => {\r\n      const callback = ref.current;\r\n      callback(...args);\r\n    },\r\n    [ref],\r\n  );\r\n};\r\n","D:\\todo-list\\src\\components\\UI\\Modal\\Modal.tsx",[],"D:\\todo-list\\src\\components\\TodoForm\\TodoForm.tsx",[],"D:\\todo-list\\src\\components\\UI\\Modal\\index.ts",[],"D:\\todo-list\\src\\components\\UI\\Overlay\\index.ts",[],"D:\\todo-list\\src\\components\\UI\\Overlay\\Overlay.tsx",["68"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useEventCallback } from '../../../hooks/useEventCallback';\r\n\r\nexport interface OverlayProps {\r\n  show: boolean;\r\n  children: React.ReactNode;\r\n  onEscPressed?: () => void;\r\n}\r\n\r\nconst Overlay: React.FunctionComponent<OverlayProps> = ({\r\n  show,\r\n  children,\r\n  onEscPressed,\r\n}: OverlayProps) => {\r\n  const elmRef = useRef<Element | undefined>();\r\n  const [, setValue] = useState(0);\r\n  useEffect(() => {\r\n    if (!show) {\r\n      return;\r\n    }\r\n    const elm = document.createElement('div');\r\n    elm.style.position = 'fixed';\r\n    elm.style.top = '0';\r\n    elm.style.left = '0';\r\n    elm.style.right = '0';\r\n    elm.style.bottom = '0';\r\n    elm.style.zIndex = '1050';\r\n    elm.style.display = 'flex';\r\n    elm.style.justifyContent = 'center';\r\n    elm.style.alignItems = 'center';\r\n    elm.style.background = 'rgba(0, 0, 0, 0.1)';\r\n    elmRef.current = elm;\r\n    document.body.appendChild(elm);\r\n\r\n    setValue((value) => value + 1);\r\n    return (): void => {\r\n      document.body.removeChild(elm);\r\n    };\r\n  }, [show]);\r\n\r\n  const handleDocumentKeyDown = useEventCallback((e: KeyboardEvent) => {\r\n    if (e.keyCode === 27 && onEscPressed) {\r\n      onEscPressed();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!show) {\r\n      return;\r\n    }\r\n    document.addEventListener('keydown', handleDocumentKeyDown);\r\n    return (): void => {\r\n      document.removeEventListener('keydown', handleDocumentKeyDown);\r\n    };\r\n  }, [show]);\r\n  if (!show || !elmRef.current) {\r\n    return null;\r\n  }\r\n  return ReactDOM.createPortal(children, elmRef.current);\r\n};\r\nexport default Overlay;\r\n","D:\\todo-list\\src\\components\\TodoForm\\index.ts",[],"D:\\todo-list\\src\\components\\TodoItem\\TodoItem.tsx",[],"D:\\todo-list\\src\\components\\TodoItem\\index.ts",[],"D:\\todo-list\\src\\components\\ActionBox\\ActionBox.tsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":12,"column":11,"nodeType":"75","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"76","line":56,"column":6,"nodeType":"77","endLine":56,"endColumn":12,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has a missing dependency: 'handleDocumentKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [handleDocumentKeyDown, show]",{"range":"84","text":"85"},[1531,1537],"[handleDocumentKeyDown, show]"]